{"version":3,"file":"static/js/333.bafe29c7.chunk.js","mappings":"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","sources":["Api/Api.js","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBarm.module.css?b5f2","components/SearchBar/SearchBar.js","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'a8ee29bfb9bbeb066f9027b41e5a7445';\n\n// Funkcja do pobierania aktualnie najpopularniejszych filmów\nconst getTrending = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.log('getTrending error:', error);\n  }\n};\n\n// Funkcja do wyszukiwania filmu po słowie kluczowym\nconst searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.log('searchMovies error:', error);\n  }\n};\n\n// Funkcja do pobierania pełnych informacji o filmie\nconst getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data);\n      }, 1000);\n    });\n  } catch (error) {\n    console.error('getMovieDetails error:', error);\n  }\n};\n\n// Funkcja do pobierania informacji o aktorach w filmie\nconst getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.cast);\n      }, 500);\n    });\n  } catch (error) {\n    console.error('getMovieCredits error:', error);\n  }\n};\n\n// Funkcja do pobierania recenzji o filmie\nconst getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.error('getMovieReviews error:', error);\n  }\n};\n\nexport {\n  getTrending,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"SearchBarm_Searchbar__UEnJI\",\"SearchForm\":\"SearchBarm_SearchForm__WazH0\",\"SearchFormButton\":\"SearchBarm_SearchFormButton__2UmCx\",\"SearchFormButtonLabel\":\"SearchBarm_SearchFormButtonLabel__atcJf\",\"SearchFormInput\":\"SearchBarm_SearchFormInput__97oXR\"};","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './SearchBarm.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [urlSearchParams, setUrlSearchParams] = useSearchParams();\n  const urlQuery = urlSearchParams.get('query');\n  const [query, setQuery] = useState(urlQuery || '');\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(query);\n    setUrlSearchParams({ query: query });\n    setQuery(''); // Czyszczenie pola wyszukiwania po wysłaniu formularza. Input znów jest pusty.\n  };\n\n  return (\n    <div className={css.Searchbar}>\n      <form className={css.SearchForm} onSubmit={handleSubmit}>\n        <input\n          className={css.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          id=\"searchInput\"\n          name=\"searchInput\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\" className={css.SearchFormButton}>\n          <span className={css.SearchFormButtonLabel}>Search</span>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","// extracted by mini-css-extract-plugin\nexport default {\"ErrorHeading\":\"MoviesList_ErrorHeading__c02u2\",\"MovieList\":\"MoviesList_MovieList__XVN8b\",\"MovieListItem\":\"MoviesList_MovieListItem__RoK4C\",\"MovieListLink\":\"MoviesList_MovieListLink__8tncu\"};","import PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul className={css.MovieList}>\n        {movies.map(movie => (\n          <li key={movie.id} className={css.MovieListItem}>\n            <Link\n              to={`${movie.id}`}\n              state={{ from: location }}\n              className={css.MovieListLink}\n            >\n              {movie.title} ({movie.release_date.split('-')[0]})\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\n\nimport { searchMovies } from 'Api/Api';\nimport Searchbar from 'components/SearchBar/SearchBar';\nimport Notiflix from 'notiflix';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const fetchSearchMovies = async () => {\n      if (query === '') {\n        setIsLoading(false);\n      } else {\n        setIsLoading(true);\n      }\n\n      try {\n        const results = await searchMovies(query);\n        if (results.length === 0 && query !== '') {\n          Notiflix.Notify.warning(\n            'Sorry, there are no results for your query! Please try again.'\n          );\n          return;\n        }\n        setMovies(results);\n      } catch (error) {\n        console.error('FetchSearchMovies error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchSearchMovies();\n  }, [query]);\n\n  const handleSearch = searchQuery => {\n    setMovies([]);\n    setQuery(searchQuery);\n  };\n\n  return (\n    <main>\n      <Searchbar onSubmit={handleSearch} />\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} query={query} />\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["axios","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","Promise","resolve","setTimeout","data","results","t0","console","log","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","error","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","onSubmit","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","urlSearchParams","setUrlSearchParams","urlQuery","get","_useState","useState","_useState2","setQuery","_jsx","className","css","children","_jsxs","event","preventDefault","type","autoComplete","autoFocus","placeholder","id","name","value","onChange","target","movies","location","useLocation","map","movie","Link","to","state","from","title","release_date","split","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","useEffect","fetchSearchMovies","length","Notiflix","finish","Searchbar","searchQuery","Loader","MoviesList"],"sourceRoot":""}