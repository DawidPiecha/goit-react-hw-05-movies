{"version":3,"file":"static/js/900.d63d205d.chunk.js","mappings":"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","sources":["Api/Api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'a8ee29bfb9bbeb066f9027b41e5a7445';\n\n// Funkcja do pobierania aktualnie najpopularniejszych filmów\nconst getTrending = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.log('getTrending error:', error);\n  }\n};\n\n// Funkcja do wyszukiwania filmu po słowie kluczowym\nconst searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.log('searchMovies error:', error);\n  }\n};\n\n// Funkcja do pobierania pełnych informacji o filmie\nconst getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data);\n      }, 1000);\n    });\n  } catch (error) {\n    console.error('getMovieDetails error:', error);\n  }\n};\n\n// Funkcja do pobierania informacji o aktorach w filmie\nconst getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.cast);\n      }, 500);\n    });\n  } catch (error) {\n    console.error('getMovieCredits error:', error);\n  }\n};\n\n// Funkcja do pobierania recenzji o filmie\nconst getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.error('getMovieReviews error:', error);\n  }\n};\n\nexport {\n  getTrending,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ErrorHeading\":\"Cast_ErrorHeading__5ZqNo\",\"CastList\":\"Cast_CastList__2oQ+0\",\"ActorContainer\":\"Cast_ActorContainer__HRM5W\",\"ActorImage\":\"Cast_ActorImage__M0QAh\",\"ActorInfo\":\"Cast_ActorInfo__hn1gA\",\"ActorName\":\"Cast_ActorName__93D+n\",\"ActorCharacter\":\"Cast_ActorCharacter__jdV5b\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'Api/Api';\nimport Loader from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [movieCast, setMovieCast] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const details = await getMovieCredits(movieId);\n        setMovieCast(details);\n        // console.log(details);\n      } catch (error) {\n        console.error('Wystąpił błąd podczas pobierania danych filmu:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  if (!movieCast || movieCast.length === 0) {\n    return (\n      <div>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <h1 className={css.ErrorHeading}>\n            Sorry, there are no cast informations available\n          </h1>\n        )}\n      </div>\n    );\n  }\n  return (\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul className={css.CastList}>\n          {movieCast.map(cast => (\n            <li key={cast.id} className={css.ListItem}>\n              <div className={css.ActorContainer}>\n                <img\n                  className={css.ActorImage}\n                  src={\n                    cast.profile_path\n                      ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                      : 'https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg'\n                  }\n                  alt={cast.original_name}\n                />\n                <div className={css.ActorInfo}>\n                  <p className={css.ActorName}>\n                    <strong>{cast.name}</strong>\n                  </p>\n                  <p className={css.ActorCharacter}>\n                    <strong>Character:</strong> {cast.character}\n                  </p>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","Promise","resolve","setTimeout","data","results","t0","console","log","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","error","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","movieCast","setMovieCast","useEffect","fetchMovieCast","details","finish","length","_jsx","children","Loader","className","css","map","_jsxs","src","profile_path","alt","original_name","name","character","id"],"sourceRoot":""}